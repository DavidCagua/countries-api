{"version":3,"sources":["country.js","input.js","search.js","Region.js","wrapper.js","action-list.js","country-list.js","header.js","country-selected.js","country-page.js","App.js","reducer.js","reportWebVitals.js","index.js"],"names":["CountryStyled","styled","div","Country","flag","name","population","region","capital","code","navigate","useNavigate","onClick","loading","src","alt","className","InputStyled","label","Input","props","type","SearchStyled","Search","dispatch","useDispatch","useState","inputValue","setInputValue","payload","placeholder","value","onChange","e","target","RegionFilterStyled","select","Region","filterByRegion","useSelector","state","selectEvent","regionSelected","WrapperStyled","Wrapper","children","ActionListStyled","ActionList","CountryListStyled","CountryList","countryListByName","countryList","length","countryFilteredByRegion","useEffect","fetch","then","response","json","list","filter","item","undefined","ccn3","catch","console","log","map","flags","png","common","HeaderStyled","Header","setDarkmode","darkMode","to","CountrySelectedStyled","CountrySelected","subregion","tld","currencies","languages","borders","Object","keys","nativeName","key","official","symbol","CountryPageStyled","CountryPage","params","useParams","country","setCountry","mounted","id","data","store","createStore","action","toLowerCase","includes","coutryFilteredByRegion","App","setDarkMode","mainClass","window","matchMedia","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7db7c1ee.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst CountryStyled = styled.div`\r\n  cursor: pointer;\r\n  &:hover .details {\r\n    border: 1px solid var(--black);\r\n    border-top: none;\r\n    border-radius: 0 0 5px 5px;\r\n  }\r\n  text-align: left;\r\n  border-radius: 5px;\r\n  box-shadow: 0 0 7px 2px rgba(0, 0, 0, 0.03);\r\n  img {\r\n    width: 100%;\r\n    height: 160px;\r\n    border-radius: 5px 5px 0 0;\r\n    vertical-align: top;\r\n  }\r\n  .details {\r\n    padding: 1.5em;\r\n    border: 1px solid transparent;\r\n    border-top: none;\r\n    transition: 0.3s border;\r\n    background: var(--white);\r\n  }\r\n  h2 {\r\n    margin: 0;\r\n    margin-bottom: 1rem;\r\n    font-size: 18px;\r\n    font-weight: 700;\r\n  }\r\n  p {\r\n    font-size: 0.8em;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n`;\r\n\r\nfunction Country({ flag, name, population, region, capital, code }) {\r\n  const navigate = useNavigate();\r\n  function handleClick() {\r\n    navigate(`/country/${code}`);\r\n  }\r\n  return (\r\n    <CountryStyled onClick={handleClick}>\r\n      <img loading=\"lazy\" src={flag} alt=\"\" />\r\n      <div className=\"details\">\r\n        <h2>{name}</h2>\r\n        <p>\r\n          <strong>Population: </strong>\r\n          {population}\r\n        </p>\r\n        <p>\r\n          <strong>Region: </strong>\r\n          {region}\r\n        </p>\r\n        <p>\r\n          <strong>Capital: </strong>\r\n          {capital}\r\n        </p>\r\n      </div>\r\n    </CountryStyled>\r\n  );\r\n}\r\n\r\nexport default Country;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst InputStyled = styled.label`\r\n  display: inline-flex;\r\n  background: var(--white);\r\n  align-items: center;\r\n  box-shadow: 0 2px 9px 0 rgba(0, 0, 0, 0.05);\r\n  padding: 0 2rem;\r\n  border-radius: 5px;\r\n  flex: 1;\r\n  i {\r\n    margin-right: 1em;\r\n    color: #c4c4c4;\r\n  }\r\n  input {\r\n    flex: 1;\r\n    border: none;\r\n    height: 48px;\r\n    line-height: 48px;\r\n    font-size: 0.7em;\r\n    background: var(--white);\r\n    outline: 0;\r\n    color: var(--black);\r\n    &::-webkit-input-placeholder {\r\n      color: #c4c4c4;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Input({ ...props }) {\r\n  return (\r\n    <InputStyled>\r\n      <i className=\"fas fa-search\"></i>\r\n      <input type=\"text\" {...props} />\r\n    </InputStyled>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Input from \"./input\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst SearchStyled = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  .close {\r\n    position: absolute;\r\n    right: 1em;\r\n    top: 1em;\r\n    border-radius: 50%;\r\n    border: none;\r\n    box-shadow: 0 2px 9px 0 rgba(0, 0, 0, 0.05);\r\n  }\r\n`;\r\n\r\nfunction Search() {\r\n  const dispatch = useDispatch();\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const filterByName = (e) => {\r\n    setInputValue(e.target.value);\r\n    dispatch({\r\n      type: \"SET_COUNTRY_BY_NAME\",\r\n      payload: e.target.value,\r\n    });\r\n  };\r\n\r\n  const clearInput = () => {\r\n    dispatch({\r\n      type: \"SET_COUNTRY_BY_NAME\",\r\n      payload: \"\",\r\n    });\r\n    setInputValue(\"\");\r\n  };\r\n  return (\r\n    <SearchStyled>\r\n      {inputValue && (\r\n        <i className=\"fas fa-times close\" onClick={clearInput}></i>\r\n      )}\r\n      <Input\r\n        placeholder=\"Search for a country...\"\r\n        value={inputValue}\r\n        onChange={filterByName}\r\n      />\r\n    </SearchStyled>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nconst RegionFilterStyled = styled.select`\r\n  padding: 1em;\r\n  border: none;\r\n  box-shadow: 0 2px 9px 0 rgba(0, 0, 0, 0.05);\r\n  border-radius: 5px;\r\n  background: var(--white);\r\n  outline: 0;\r\n  color: var(--black);\r\n`;\r\n\r\nconst filterByRegionAction = (regionSelected) => {\r\n  return {\r\n    type: \"FILTER_BY_REGION\",\r\n    payload: { regionSelected },\r\n  };\r\n};\r\n\r\nexport const Region = () => {\r\n  const dispatch = useDispatch();\r\n  const filterByRegion = useSelector((state) => state.filterByRegion);\r\n\r\n  /**\r\n   * Disptach filterByRegion action\r\n   *\r\n   * @param {React.SyntheticEvent} selectEvent\r\n   */\r\n  const onRegionChange = (selectEvent) => {\r\n    const value = selectEvent.target.value;\r\n    dispatch(filterByRegionAction(value));\r\n  };\r\n\r\n  return (\r\n    <RegionFilterStyled onChange={onRegionChange} value={filterByRegion}>\r\n      <option value=\"\">Filter by region</option>\r\n      <option value=\"Africa\">Africa</option>\r\n      <option value=\"Americas\">Americas</option>\r\n      <option value=\"Asia\">Asia</option>\r\n      <option value=\"Europe\">Europe</option>\r\n      <option value=\"Oceania\">Oceania</option>\r\n    </RegionFilterStyled>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst WrapperStyled = styled.div`\r\n  max-width: 1280px;\r\n  margin: auto;\r\n  padding: 0 1rem;\r\n`;\r\n\r\nfunction Wrapper({ children }) {\r\n  return <WrapperStyled>{children}</WrapperStyled>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Search from \"./search\";\r\nimport { Region as FilterByRegion } from \"./Region\";\r\nimport Wrapper from \"./wrapper\";\r\n\r\nconst ActionListStyled = styled.div`\r\n  .grid {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-row-gap: 20px;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    .grid {\r\n      grid-template-columns: 480px 1fr 200px;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction ActionList() {\r\n  return (\r\n    <ActionListStyled>\r\n      <Wrapper>\r\n        <div className=\"grid\">\r\n          <Search />\r\n          <span></span>\r\n          <FilterByRegion />\r\n        </div>\r\n      </Wrapper>\r\n    </ActionListStyled>\r\n  );\r\n}\r\n\r\nexport default ActionList;\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Country from \"./country\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ActionList from \"./action-list\";\r\nimport Wrapper from \"./wrapper\";\r\n\r\nconst CountryListStyled = styled.div`\r\n  display: grid;\r\n  grid-auto-flow: columns;\r\n  grid-template-columns: repeat(auto-fill, 264px);\r\n  grid-column-gap: 70px;\r\n  grid-row-gap: 2.3em;\r\n  background: var(--background);\r\n  justify-content: center;\r\n  padding: 3em 0;\r\n`;\r\n\r\nfunction CountryList() {\r\n  const dispatch = useDispatch();\r\n\r\n  const countryListByName = useSelector((state) => state.countryListByName);\r\n\r\n  const countryList = useSelector((state) => {\r\n    if (state.filterByRegion !== \"\" && countryListByName.length >= 0) {\r\n      return state.countryFilteredByRegion;\r\n    }\r\n    if (countryListByName.length > 0) {\r\n      return countryListByName;\r\n    }\r\n    return state.countryList;\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://restcountries.com/v3.1/all\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((list) => {\r\n        dispatch({\r\n          type: \"SET_COUNTRY_LIST\",\r\n          payload: list.filter((item) => item.ccn3 !== undefined),\r\n        });\r\n      })\r\n      .catch(() => {\r\n        console.log(\"error\");\r\n      });\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ActionList />\r\n      <CountryListStyled>\r\n        {countryList.map(\r\n          ({ name, flags, population, capital, region, ccn3 }) => {\r\n            return (\r\n              <Country\r\n                flag={flags.png}\r\n                name={name.common}\r\n                key={name.common}\r\n                code={ccn3}\r\n                population={population}\r\n                region={region}\r\n                capital={capital}\r\n              />\r\n            );\r\n          }\r\n        )}\r\n      </CountryListStyled>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default CountryList;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Wrapper from \"./wrapper\";\r\n\r\nconst HeaderStyled = styled.div`\r\n  background: var(--white);\r\n  margin-bottom: 1em;\r\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.06);\r\n  .content {\r\n    height: 80px;\r\n    align-items: center;\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  h1 {\r\n    font-size: 14px;\r\n  }\r\n  .dark-mode {\r\n    cursor: pointer;\r\n    .moon {\r\n      transform: rotate(-25deg);\r\n      margin-right: 10px;\r\n      display: inline-flex;\r\n    }\r\n    p {\r\n      font-size: 12px;\r\n      font-weight: 600;\r\n    }\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: var(--black);\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    margin-bottom: 3em;\r\n    h1 {\r\n      font-size: 24px;\r\n    }\r\n    .dark-mode {\r\n      p {\r\n        font-size: 16px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Header({ setDarkmode, darkMode }) {\r\n  function handleClick() {\r\n    setDarkmode(!darkMode);\r\n  }\r\n  return (\r\n    <HeaderStyled>\r\n      <Wrapper>\r\n        <div className=\"content\">\r\n          <Link to=\"/\">\r\n            <h1>Where in the world?</h1>\r\n          </Link>\r\n          <div className=\"dark-mode\">\r\n            <p onClick={handleClick}>\r\n              <span className=\"moon\">\r\n                {darkMode ? (\r\n                  <i className=\"fas fa-moon\"></i>\r\n                ) : (\r\n                  <i className=\"far fa-moon\"></i>\r\n                )}\r\n              </span>\r\n              Dark Mode\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </Wrapper>\r\n    </HeaderStyled>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst CountrySelectedStyled = styled.div`\r\n  margin-top: 3em;\r\n  padding-bottom: 3em;\r\n  img {\r\n    width: 100%;\r\n    margin-bottom: 2em;\r\n  }\r\n  .grid {\r\n    display: grid;\r\n    grid-row-gap: 1em;\r\n  }\r\n  .border-item {\r\n    padding: 0.5em 2em;\r\n    border-radius: 5px;\r\n    margin-right: 15px;\r\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);\r\n    display: inline-flex;\r\n    margin-bottom: 15px;\r\n    background: var(--white);\r\n    cursor: pointer;\r\n  }\r\n  .grid span {\r\n    &:after {\r\n      content: \", \";\r\n    }\r\n    &:last-child {\r\n      &:after {\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n  @media screen and (min-width: 1024px) {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-column-gap: 120px;\r\n    margin-top: 5em;\r\n    .grid {\r\n      grid-template-columns: 1fr 1fr;\r\n    }\r\n    .borders {\r\n      display: inline-flex;\r\n      margin-right: 1em;\r\n      margin-top: 4em;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction CountrySelected({\r\n  flags,\r\n  name,\r\n  population,\r\n  region,\r\n  subregion,\r\n  capital,\r\n  tld,\r\n  currencies,\r\n  languages,\r\n  borders,\r\n}) {\r\n  return (\r\n    <CountrySelectedStyled>\r\n      <img src={flags.png} />\r\n      <div>\r\n        <h2>{name.common}</h2>\r\n        <div className=\"grid\">\r\n          <div>\r\n            <p>\r\n              <strong>Native Name: </strong>\r\n              {Object.keys(name.nativeName).map((key) => {\r\n                return <span>{name.nativeName[key].official}</span>;\r\n              })}\r\n            </p>\r\n            <p>\r\n              <strong>Population: </strong>\r\n              {population}\r\n            </p>\r\n            <p>\r\n              <strong>Region: </strong>\r\n              {region}\r\n            </p>\r\n            <p>\r\n              <strong>Sub Region: </strong>\r\n              {subregion}\r\n            </p>\r\n            <p>\r\n              <strong>Capital: </strong>\r\n              {capital}\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <p>\r\n              <strong>Top Level Domain: </strong>\r\n              {tld}\r\n            </p>\r\n            <p>\r\n              <strong>Currencies: </strong>\r\n\r\n              {Object.keys(currencies).map((key) => {\r\n                return (\r\n                  <span>{`${currencies[key].name} (${currencies[key].symbol})`}</span>\r\n                );\r\n              })}\r\n            </p>\r\n            <p>\r\n              <strong>Languages: </strong>\r\n              {Object.keys(languages).map((key) => {\r\n                return <span>{languages[key]}</span>;\r\n              })}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <p className=\"borders\">\r\n          <strong>Border Countries: </strong>\r\n        </p>\r\n        {borders\r\n          ? borders.map((item) => {\r\n              return <span className=\"border-item\">{item}</span>;\r\n            })\r\n          : \"None\"}\r\n      </div>\r\n    </CountrySelectedStyled>\r\n  );\r\n}\r\n\r\nexport default CountrySelected;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport CountrySelected from \"./country-selected\";\r\nimport Wrapper from \"./wrapper\";\r\n\r\nconst CountryPageStyled = styled.div`\r\n  .back {\r\n    background: var(--white);\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\r\n    padding: 0.5em 2.2em;\r\n    border-radius: 5px;\r\n    border: none;\r\n    cursor: pointer;\r\n    margin-top: 3em;\r\n    color: var(--black);\r\n    i {\r\n      margin-right: 5px;\r\n    }\r\n  }\r\n  @media screen and (min-width: 1024px) {\r\n    .back {\r\n      margin-top: 3em;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction CountryPage() {\r\n  let navigate = useNavigate();\r\n  const params = useParams();\r\n  const [country, setCountry] = useState();\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    fetch(`https://restcountries.com/v3.1/alpha/${params.id}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (mounted) {\r\n          setCountry(data[0]);\r\n        }\r\n      });\r\n    return () => (mounted = false);\r\n  }, []);\r\n  function handleClick() {\r\n    navigate(-1);\r\n  }\r\n  return (\r\n    <CountryPageStyled>\r\n      <Wrapper>\r\n        <button className=\"back\" onClick={handleClick}>\r\n          <i className=\"fas fa-long-arrow-alt-left\"></i>Back\r\n        </button>\r\n        {country ? <CountrySelected {...country} /> : <p>Cargando...</p>}\r\n      </Wrapper>\r\n    </CountryPageStyled>\r\n  );\r\n}\r\n\r\nexport default CountryPage;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport CountryList from \"./country-list\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport reducer from \"./reducer\";\nimport Header from \"./header\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport CountryPage from \"./country-page\";\n\nconst initialState = {\n  countryList: [],\n  countryListByName: [],\n  coutryFilteredByRegion: [],\n  filterByRegion: \"\",\n};\n\nconst store = createStore(reducer, initialState);\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false);\n  const mainClass = darkMode ? \"is-dark-mode\" : \"is-light-mode\";\n\n  useEffect(() => {\n    const mql = window.matchMedia(\"(prefers-color-scheme: dark)\");\n  }, []);\n  return (\n    <main className={mainClass}>\n      <Provider store={store}>\n        <Router>\n          <Header darkMode={darkMode} setDarkmode={setDarkMode} />\n          <Routes>\n            <Route path=\"/country/:id\" element={<CountryPage />} />\n            <Route path=\"/\" element={<CountryList />}></Route>\n          </Routes>\n        </Router>\n      </Provider>\n    </main>\n  );\n}\n\nexport default App;\n","export default function reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"SET_COUNTRY_LIST\": {\r\n      return { ...state, countryList: action.payload };\r\n    }\r\n    case \"SET_COUNTRY_BY_NAME\": {\r\n      let countryFilteredByRegion = [];\r\n      let list;\r\n      if (state.filterByRegion !== \"\") {\r\n        list = state.countryFilteredByRegion;\r\n        if (action.payload === \"\") {\r\n          list = state.countryList;\r\n          countryFilteredByRegion = list.filter(\r\n            (country) => country.region === state.filterByRegion\r\n          );\r\n          return {\r\n            ...state,\r\n            countryListByName: list,\r\n            countryFilteredByRegion,\r\n          };\r\n        }\r\n      } else {\r\n        list = state.countryList;\r\n      }\r\n      const countryListByName = list.filter((country) =>\r\n        country.name.common.toLowerCase().includes(action.payload.toLowerCase())\r\n      );\r\n      return { ...state, countryListByName };\r\n    }\r\n    case \"FILTER_BY_REGION\": {\r\n      const { regionSelected } = action.payload;\r\n      let countryFilteredByRegion = [];\r\n      if (regionSelected === \"\") {\r\n        return { ...state, countryFilteredByRegion: [], filterByRegion: \"\" };\r\n      }\r\n      if (state.countryListByName) {\r\n        countryFilteredByRegion = state.countryListByName.filter(\r\n          (country) => country.region === regionSelected\r\n        );\r\n      } else {\r\n        countryFilteredByRegion = state.countryList.filter(\r\n          (country) => country.region === regionSelected\r\n        );\r\n      }\r\n      return {\r\n        ...state,\r\n        countryFilteredByRegion,\r\n        filterByRegion: regionSelected,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}